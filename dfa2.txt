S = [a S ^ (b a)*],

This is the language given by
	S = [0:0:0], where [m:n:p] == a^m S ^ ( (ba)* )^n ^ ( a(ba)* )^p.
with the recursion S = 1 + [1:1:0]. It is the least fixed point solution to the following system:
	[0:0:0] = a [0:1:0] + b [1:0:1] + 1
	[1:0:0] = a [0:0:0]
	[0:0:p+1] = a ([0:1:p+1] + [0:1:p]) + b [1:0:p+2]
	[1:0:p+1] = a ([0:0:p+1] + [1:1:p])
	[0:n+1:0] = a [0:n+2:0] + b ([1:n+1:1] + [0:n:1]) + 1
	[1:n+1:0] = a [0:n+1:0] + b [1:n:1]
	[0:n+1:p+1] = a ([0:n+2:p+1] + [0:n+2:p]) + b ([1:n+1:p+2] + [0:n:p+2])
	[1:n+1:p+1] = a ([0:n+1:p+1] + [1:n+2:p]) + b [1:n:p+2]

In procedural terms, it may be given by the following specification:

Start: m = n = p = 0
Final: m == 0 && p == 0
Delta a:
	if (p > 0) spawn a new thread initalized with n++, p--;
	if (m == 0) n++; else m--;
Delta b:
	if (m == 0) {
		if (n > 0) spawn a new thread initialized with n--, p++;
		m++, p++;
	} else if (n > 0) n--, p++;
	else kill the current thread;

The example in DFA2.in is a 4-level approximation:
	S = 0,
	S = [a S ^ (b a)*],
	S = [a S ^ (b a)*],
	S = [a S ^ (b a)*],
	S = [a S ^ (b a)*],
	S
that yields 19 states. If you try to do 5 levels the computations blow up.
